const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const webhookSchema = new Schema({
    Url: { type: String },
    EventData: {
        Moto: Boolean,
        BinId: Number,
        IsDcc: Boolean,
        Ucaf: String,
        Email: String,
        Phone: String,
        BankId: String,
        Systemic: Boolean,
        BatchId: String,
        Switching: Boolean,
        ParentId: String,
        Amount: Number,
        ChannelId: String,
        TerminalId: Number,
        MerchantId: String,
        OrderCode: Number,
        ProductId: String,
        StatusId: String,
        FullName: String,
        ResellerId: String,
        DualMessage: Boolean,
        InsDate: Date,
        TotalFee: Number,
        CardToken: String,
        CardNumber: String,
        Descriptor: String,
        TipAmount: Number,
        SourceCode: String,
        SourceName: String,
        Latitude: Number,
        Longitude: Number,
        CompanyName: String,
        TransactionId: String,
        CompanyTitle: String,
        PanEntryMode: String,
        ReferenceNumber: Number,
        ResponseCode: String,
        CurrencyCode: String,
        OrderCulture: String,
        MerchantTrns: String,
        CustomerTrns: String,
        IsManualRefund: Boolean,
        TargetPersonId: String,
        TargetWalletId: String,
        AcquirerApproved: Boolean,
        LoyaltyTriggered: Boolean,
        TransactionTypeId: Number,
        AuthorizationId: String,
        TotalInstallments: Number,
        CardCountryCode: String,
        CardIssuingBank: String,
        RedeemedAmount: Number,
        ClearanceDate: Date,
        ConversionRate: Number,
        CurrentInstallment: Number,
        OriginalAmount: Number,
        Tags: [String],
        BillId: String,
        ConnectedAccountId: String,
        ResellerSourceCode: String,
        ResellerSourceName: String,
        MerchantCategoryCode: Number,
        ResellerCompanyName: String,
        CardUniqueReference: String,
        OriginalCurrencyCode: String,
        ExternalTransactionId: String,
        ResellerSourceAddress: String,
        CardExpirationDate: Date,
        ServiceId: String,
        RetrievalReferenceNumber: String,
        AssignedMerchantUsers: [String],
        AssignedResellerUsers: [String],
        CardTypeId: Number,
        ResponseEventId: String,
        ElectronicCommerceIndicator: String,
        OrderServiceId: Number,
        ApplicationIdentifierTerminal: String,
        IntegrationId: String,
        DigitalWalletId: String,
        CardProductCategoryId: Number,
        CardProductAccountTypeId: Number,
        DccSessionId: String,
        DccMarkup: Number,
        DccDifferenceOverEcb: Number
    },
    Created: { type: Date, default: Date.now },
    CorrelationId: String,
    EventTypeId: Number,
    Delay: Number,
    RetryCount: Number,
    RetryDelay: Number,
    MessageId: String,
    RecipientId: String,
    MessageTypeId: Number
});

const Webhook = mongoose.model("Webhook", webhookSchema);
module.exports = Webhook;
